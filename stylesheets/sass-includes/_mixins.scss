/*
    Move element off screen
*/

@mixin move-off-screen () {
    position: absolute;
    top: 0;
    left: 0;
}

/*
    Move text off screen 
*/

@mixin replace-text () {
    text-indent: -9999px;
    overflow: hidden;
}

/*
    Fix inline-block cross browser
*/

@mixin inline-block () {
  display: inline-block;
  vertical-align: baseline;
  zoom: 1;
  *display: inline;
  *vertical-align: auto;
}

/*
    New hotness clearfix
*/

@mixin clearfix () {
  *zoom: 1;
  
  &:before, &:after {
    content: " ";
    display: table;
  }
  
  &:after {
    clear: both;
  }
}

/*
    Add some depth to an element
*/

@mixin add-depth ( $borderColor, $opacityLevel ) {
    box-shadow: inset 0px 1px 2px rgba(255, 255, 255, $opacityLevel);
    border: 1px solid $borderColor;
}

/*
    Convert pixels to ems
*/

@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em
}

/*
    Easy font-face
*/

@mixin font-face ( $font-family, $file-path, $font-weight, $font-style ) {
  @font-face {
    font-family: $font-family;
      src: url('#{$file-path}.eot');
      src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
           url('#{$file-path}.woff') format('woff'),
           url('#{$file-path}.ttf') format('truetype'),
           url('#{$file-path}.svg##{$font-family}') format('svg');
    font-weight: $font-weight;
    font-style: $font-style;
  }
}

/*
    Vector image with a PNG fallback
*/

@mixin vector-bg-with-fallback ( $name ) {
    background-image: url('#{$public_path}images/#{$name}.png');
    background-image: none, url('#{$public_path}images/#{$name}.svg');
}

/*
    Vendor prefix'd helpers
*/

@mixin border-radius ( $values ) {
    -webkit-border-radius: $values;
       -moz-border-radius: $values;
            border-radius: $values;
    -webkit-background-clip: padding-box;
       -moz-background-clip: padding; 
            background-clip: padding-box;
}

@mixin box-shadow ( $values ) {
    -webkit-box-shadow: $values;
       -moz-box-shadow: $values;
            box-shadow: $values;
}

@mixin box-sizing ( $values ) {
    -webkit-box-sizing: $values;
       -moz-box-sizing: $values;
            box-sizing: $values;
}

@mixin text-rendering ( $string ) {
    -webkit-text-rendering: $string;
       -moz-text-rendering: $string;
            text-rendering: $string;
}

@mixin transform ( $values ) {
    -webkit-transform: $values;
       -moz-transform: $values;
        -ms-transform: $values;
         -o-transform: $values;
            transform: $values;
}

@mixin transition ( $values ) {
    -webkit-transition: $values;
       -moz-transition: $values;
        -ms-transition: $values;
         -o-transition: $values;
            transition: $values;
}

@mixin gradient-linear ( $start, $end ) {
    background: $start;
    background: -moz-linear-gradient(top,  $start 0%, $end 100%);
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start), color-stop(100%,$end));
    background: -webkit-linear-gradient(top,  $start 0%,$end 100%);
    background: -o-linear-gradient(top,  $start 0%,$end 100%);
    background: -ms-linear-gradient(top,  $start 0%,$end 100%);
    background: linear-gradient(to bottom,  $start 0%,$end 100%);
}

@mixin gradient-linear-horizontal ( $white, $left, $right ) {
    background: #1c7bbd;
    background: -moz-linear-gradient(left, $white 0%, #1c7bbd $left, #1c7bbd $right, $white 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,$white), color-stop($left,#1c7bbd), color-stop($right,#1c7bbd), color-stop(100%,$white));
    background: -webkit-linear-gradient(left,  $white 0%,#1c7bbd $left,#1c7bbd $right,$white 100%);
    background: -o-linear-gradient(left,  $white 0%,#1c7bbd $left,#1c7bbd $right,$white 100%);
    background: -ms-linear-gradient(left,  $white 0%,#1c7bbd $left,#1c7bbd $right,$white 100%);
    background: linear-gradient(to right,  $white 0%,#1c7bbd $left,#1c7bbd $right,$white 100%);
}